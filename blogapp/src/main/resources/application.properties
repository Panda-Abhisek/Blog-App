spring.application.name=blogapp

# Database Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/blogapp
spring.datasource.username=postgres
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA and Hibernate Settings
spring.jpa.hibernate.ddl-auto= create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Connection Pool Settings (HikariCP by default)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=PostgresHikariCP

spring.app.jwtSecret= ${JWT_SECRET}
spring.app.jwtExpirationMs= 172800000

frontend.url= http://localhost:5173

# Gemini API
gemini.api.key= ${GEMINI_API_KEY}

#Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL}
spring.mail.password=${BLOG-APP-EMAIL-SERVICE-PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid, email, profile
